// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique @db.VarChar(255)
  email_verified_at DateTime? @db.Timestamp(3)
  password          String?   @db.VarChar(255)
  google_id         String?   @db.VarChar(255)
  customer          Customer?
  created_at        DateTime? @default(now())
  updated_at        DateTime? @updatedAt
  review            Review[]

  @@map("users")
}

model VerificationCode {
  id                Int       @id @default(autoincrement())
  email             String    @unique @db.VarChar(100)
  otp               String    @db.VarChar(20)
  expired_at        DateTime? @db.DateTime(5)
  is_email_verified Boolean   @default(false)
  created_at        DateTime? @default(now())
  updated_at        DateTime? @updatedAt

  @@map("verification_codes")
}

model Customer {
  id            String  @id @default(uuid())
  customer_name String
  phone         String?
  address       String?
  picture       String?
  user_id       Int     @unique
  user          User    @relation(fields: [user_id], references: [id])

  @@map("customers")
}

model Homestay {
  id              String                @id @default(uuid())
  homestay_name   String
  owner           String
  description     String?               @db.Text
  main_image      String?
  phone           String
  location_id     String?               @unique
  location        Location?             @relation(fields: [location_id], references: [id])
  destinations    DestinationHomestay[]
  amenities       AmenityHomestay[]
  image_homestays ImageHomestay[]
  reviews         Review[]
  categories      CategoryHomestay[]
  rooms           Room[]

  @@map("homestays")
}

model Amenity {
  id               String            @id @default(uuid())
  amenity_name     String
  icon             String
  amenity_homestay AmenityHomestay[]

  @@map("amenities")
}

model AmenityHomestay {
  amenity_id  String
  homestay_id String
  amenity     Amenity?  @relation(fields: [amenity_id], references: [id])
  homestay    Homestay? @relation(fields: [homestay_id], references: [id])

  @@id([amenity_id, homestay_id])
  @@map("amenity_homestays")
}

model Location {
  id          String       @id @default(uuid())
  address     String
  latitude    Float
  longitude   Float
  homestay    Homestay?
  destination Destination?

  @@map("locations")
}

model Destination {
  id               String                @id @default(uuid())
  destination_name String
  description      String
  location_id      String                @unique
  location         Location              @relation(fields: [location_id], references: [id])
  homestays        DestinationHomestay[]

  @@map("destinations")
}

model DestinationHomestay {
  homestay_id    String
  destination_id String
  distance       Float
  homestay       Homestay?    @relation(fields: [homestay_id], references: [id])
  destination    Destination? @relation(fields: [destination_id], references: [id])

  @@id([homestay_id, destination_id])
  @@map("destination_homestays")
}

model ImageHomestay {
  id          String    @id @default(uuid())
  image       String
  homestay_id String
  homestay    Homestay? @relation(fields: [homestay_id], references: [id])

  @@map("image_homestays")
}

model Review {
  user_id     Int
  homestay_id String
  rating      Float
  comment     String?
  user        User?     @relation(fields: [user_id], references: [id])
  homestay    Homestay? @relation(fields: [homestay_id], references: [id])

  @@id([user_id, homestay_id])
  @@map("reviews")
}

model Category {
  id        Int                @id @default(autoincrement())
  name      String
  icon      String
  homestays CategoryHomestay[]
}

model CategoryHomestay {
  category_id Int
  homestay_id String
  homestay    Homestay? @relation(fields: [homestay_id], references: [id])
  category    Category? @relation(fields: [category_id], references: [id])

  @@id([category_id, homestay_id])
}

model Room {
  id          String    @id @default(uuid())
  room_name   String
  price       Float
  description String    @db.Text
  main_image  String
  capacity    Int
  discount    Float // nilai discount dalam (%)
  room_type   RoomType
  homestay_id String
  homestay    Homestay? @relation(fields: [homestay_id], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum RoomType {
  standar
  fullhouse
}
